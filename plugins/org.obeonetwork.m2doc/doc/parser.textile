h1. Document Parser 

This document describes the document parsing algorithm used to transform docx template into org.eclipse.gendoc2.Template instance.

h2. structure of a template

Templates are made of instance of the following meta model :
!template class diagram.jpg! 

That is a tree of @Construct@ instances of various kinds. A @Construct@ instance contains a list of all the runs that compose it. Runs are the smallest subdivisions of document (smaller than paragaphs).

h2. general structure of the parsing algorithm

The parsing algorithm is a mutually recursive top down parser made of the following routines :

* @parseTemplate@
* @parseQuery@
* @parseImage@
* @parseRepetition@
* @parseConditionnal@
* @parseTable@
* @parseRepresentation@
* @parseStaticFragment()@

OOXML documents are broken into bodies which are made of paragraphs which are made of runs. Runs are a homogeneous unit of style and are atomic. 

The parsing is directed by a lookahead that predicts the next construct in the template based on whether it detects a field and on the field's code. Each routine implements the detailed parsing of the related directive and inserts error diagnostics in the template in case parsing errors are found. 

The result of the parsing is a template which elements point on the runs in the input document. This allows to reproduce the static parts. 

